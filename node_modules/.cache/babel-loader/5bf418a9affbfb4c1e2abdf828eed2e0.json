{"ast":null,"code":"import _toConsumableArray from\"/Users/timtaylor/Documents/expense-tracker-app-main/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/timtaylor/Documents/expense-tracker-app-main/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from\"./GlobalState\";export var reducer=function reducer(state,action){switch(action.type){case ACTIONS.GET_TRANSACTION:return _objectSpread(_objectSpread({},state),{},{loading:false,transactions:action.payload});case ACTIONS.DELETE_TRANSACTION:return _objectSpread(_objectSpread({},state),{},{transactions:state.transactions.filter(function(transaction){return transaction.id!==action.payload;})});case ACTIONS.ADD_TRANSACTION:return _objectSpread(_objectSpread({},state),{},{transactions:[].concat(_toConsumableArray(state.transactions),[action.payload])});case ACTIONS.ERROR_TRANSACTION:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}};","map":{"version":3,"sources":["/Users/timtaylor/Documents/expense-tracker-app-main/client/src/context/AppReducer.js"],"names":["ACTIONS","reducer","state","action","type","GET_TRANSACTION","loading","transactions","payload","DELETE_TRANSACTION","filter","transaction","id","ADD_TRANSACTION","ERROR_TRANSACTION","error"],"mappings":"iSAAA,OAASA,OAAT,KAAwB,eAAxB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACxC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKJ,CAAAA,OAAO,CAACK,eAAb,CACE,sCACKH,KADL,MAEEI,OAAO,CAAE,KAFX,CAGEC,YAAY,CAAEJ,MAAM,CAACK,OAHvB,GAKF,IAAKR,CAAAA,OAAO,CAACS,kBAAb,CACE,sCACKP,KADL,MAEEK,YAAY,CAAEL,KAAK,CAACK,YAAN,CAAmBG,MAAnB,CACZ,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAACC,EAAZ,GAAmBT,MAAM,CAACK,OAA3C,EADY,CAFhB,GAMF,IAAKR,CAAAA,OAAO,CAACa,eAAb,CACE,sCACKX,KADL,MAEEK,YAAY,8BAAML,KAAK,CAACK,YAAZ,GAA0BJ,MAAM,CAACK,OAAjC,EAFd,GAIF,IAAKR,CAAAA,OAAO,CAACc,iBAAb,CACE,sCACKZ,KADL,MAEEa,KAAK,CAAEZ,MAAM,CAACK,OAFhB,GAIF,QACE,MAAON,CAAAA,KAAP,CAzBJ,CA2BD,CA5BM","sourcesContent":["import { ACTIONS } from \"./GlobalState\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.GET_TRANSACTION:\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload,\n      };\n    case ACTIONS.DELETE_TRANSACTION:\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case ACTIONS.ADD_TRANSACTION:\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload],\n      };\n    case ACTIONS.ERROR_TRANSACTION:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}