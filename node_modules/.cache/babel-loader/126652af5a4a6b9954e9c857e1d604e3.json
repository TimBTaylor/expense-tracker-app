{"ast":null,"code":"var _jsxFileName = \"/Users/timtaylor/Documents/expense-tracker-app/client/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { reducer } from \"./AppReducer\";\nimport axios from \"axios\"; //Initial State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n};\nexport const ACTIONS = {\n  DELETE_TRANSACTION: \"delete_transaction\",\n  ADD_TRANSACTION: \"add_transaction\",\n  GET_TRANSACTION: \"get_transaction\",\n  ERROR_TRANSACTION: \"error_transaction\"\n}; //Create  context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); //Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); //Actions\n\n  async function getTransactions(id) {\n    try {\n      const res = await axios.get(`https://expensetrackerbytim.herokuapp.com/expensetracker/${id}`);\n      dispatch({\n        type: ACTIONS.GET_TRANSACTION,\n        payload: res.data.transaction\n      });\n    } catch (err) {\n      dispatch({\n        type: ACTIONS.ERROR_TRANSACTION,\n        payload: err.res\n      });\n    }\n  }\n\n  async function deleteTransaction(transactionDetails) {\n    const userId = localStorage.getItem(\"id\");\n    const id = transactionDetails.id;\n\n    try {\n      await axios.delete(`https://expensetrackerbytim.herokuapp.com/expensetracker/deletetransaction/${userId}`, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: {\n          transaction: {\n            id: transactionDetails.id,\n            transactionAmount: `${transactionDetails.transactionAmount}`,\n            transactionType: `${transactionDetails.transactionType}`,\n            date: `${transactionDetails.date}`,\n            source: `${transactionDetails.source}`\n          }\n        }\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.err(err);\n      });\n      dispatch({\n        type: ACTIONS.DELETE_TRANSACTION,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: ACTIONS.ERROR_TRANSACTION,\n        payload: err.res\n      });\n    }\n  }\n\n  async function addTransaction(transactionItem) {\n    const userId = localStorage.getItem(\"id\");\n\n    try {\n      await axios.post(`https://expensetrackerbytim.herokuapp.com/expensetracker/addtransaction/${userId}`, {\n        transaction: {\n          id: transactionItem.id,\n          transactionAmount: transactionItem.transactionAmount,\n          transactionType: transactionItem.transactionType,\n          date: transactionItem.date,\n          source: transactionItem.source\n        }\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.error(err);\n      });\n      dispatch({\n        type: ACTIONS.ADD_TRANSACTION,\n        payload: transactionItem\n      });\n    } catch (err) {\n      dispatch({\n        type: ACTIONS.ERROR_TRANSACTION,\n        payload: err.res\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction,\n      getTransactions,\n      error: state.error,\n      loading: state.loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/timtaylor/Documents/expense-tracker-app/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","reducer","axios","initialState","transactions","error","loading","ACTIONS","DELETE_TRANSACTION","ADD_TRANSACTION","GET_TRANSACTION","ERROR_TRANSACTION","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","id","res","get","type","payload","data","transaction","err","deleteTransaction","transactionDetails","userId","localStorage","getItem","delete","headers","transactionAmount","transactionType","date","source","then","console","log","catch","addTransaction","transactionItem","post"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport { reducer } from \"./AppReducer\";\nimport axios from \"axios\";\n\n//Initial State\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true,\n};\n\nexport const ACTIONS = {\n  DELETE_TRANSACTION: \"delete_transaction\",\n  ADD_TRANSACTION: \"add_transaction\",\n  GET_TRANSACTION: \"get_transaction\",\n  ERROR_TRANSACTION: \"error_transaction\",\n};\n\n//Create  context\nexport const GlobalContext = createContext(initialState);\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //Actions\n\n  async function getTransactions(id) {\n    try {\n      const res = await axios.get(\n        `https://expensetrackerbytim.herokuapp.com/expensetracker/${id}`\n      );\n\n      dispatch({\n        type: ACTIONS.GET_TRANSACTION,\n        payload: res.data.transaction,\n      });\n    } catch (err) {\n      dispatch({\n        type: ACTIONS.ERROR_TRANSACTION,\n        payload: err.res,\n      });\n    }\n  }\n\n  async function deleteTransaction(transactionDetails) {\n    const userId = localStorage.getItem(\"id\");\n    const id = transactionDetails.id;\n    try {\n      await axios\n        .delete(\n          `https://expensetrackerbytim.herokuapp.com/expensetracker/deletetransaction/${userId}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            data: {\n              transaction: {\n                id: transactionDetails.id,\n                transactionAmount: `${transactionDetails.transactionAmount}`,\n                transactionType: `${transactionDetails.transactionType}`,\n                date: `${transactionDetails.date}`,\n                source: `${transactionDetails.source}`,\n              },\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.err(err);\n        });\n      dispatch({\n        type: ACTIONS.DELETE_TRANSACTION,\n        payload: id,\n      });\n    } catch (err) {\n      dispatch({\n        type: ACTIONS.ERROR_TRANSACTION,\n        payload: err.res,\n      });\n    }\n  }\n\n  async function addTransaction(transactionItem) {\n    const userId = localStorage.getItem(\"id\");\n    try {\n      await axios\n        .post(\n          `https://expensetrackerbytim.herokuapp.com/expensetracker/addtransaction/${userId}`,\n          {\n            transaction: {\n              id: transactionItem.id,\n              transactionAmount: transactionItem.transactionAmount,\n              transactionType: transactionItem.transactionType,\n              date: transactionItem.date,\n              source: transactionItem.source,\n            },\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n      dispatch({\n        type: ACTIONS.ADD_TRANSACTION,\n        payload: transactionItem,\n      });\n    } catch (err) {\n      dispatch({\n        type: ACTIONS.ERROR_TRANSACTION,\n        payload: err.res,\n      });\n    }\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n        getTransactions,\n        error: state.error,\n        loading: state.loading,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}