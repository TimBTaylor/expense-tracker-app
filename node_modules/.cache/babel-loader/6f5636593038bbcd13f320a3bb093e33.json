{"ast":null,"code":"var _jsxFileName = \"/Users/timtaylor/Documents/expense-tracker-app/client/src/components/TransactionList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TransactionList = () => {\n  _s();\n\n  const {\n    transactions,\n    getTransactions\n  } = useContext(GlobalContext);\n  const [search, setSearch] = useState(\"\");\n  const [month, setMonth] = useState(\"\");\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const listLength = transactions.length;\n  useEffect(() => {\n    const id = localStorage.getItem(\"id\");\n    getTransactions(id); // eslint-disable-next-line\n  }, []);\n  const months = [{\n    value: \"01\",\n    label: \"January\"\n  }, {\n    value: \"02\",\n    label: \"February\"\n  }, {\n    value: \"03\",\n    label: \"March\"\n  }, {\n    value: \"04\",\n    label: \"April\"\n  }, {\n    value: \"05\",\n    label: \"May\"\n  }, {\n    value: \"06\",\n    label: \"June\"\n  }, {\n    value: \"07\",\n    label: \"July\"\n  }, {\n    value: \"08\",\n    label: \"August\"\n  }, {\n    value: \"09\",\n    label: \"September\"\n  }, {\n    value: \"10\",\n    label: \"October\"\n  }, {\n    value: \"11\",\n    label: \"November\"\n  }, {\n    value: \"12\",\n    label: \"December\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: listLength >= 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by transaction\",\n        onChange: e => {\n          setSearch(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: obj => {\n          setSelectedValue(obj);\n          setMonth(obj.value);\n        },\n        value: selectedValue,\n        options: months,\n        placeholder: \"Search by month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"more\",\n        children: transactions.filter(transaction => {\n          if (search === \"\") {\n            return transaction;\n          } else if (transaction.transactionType.toLowerCase().includes(search.toLowerCase())) {\n            return transaction;\n          }\n        }).filter(transaction => {\n          if (month === \"\") {\n            return transaction;\n          } else if (transaction.date.substring(0, 2) === month) {\n            return transaction;\n          }\n        }).slice(0).reverse().map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n          transaction: transaction\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by transaction\",\n        onChange: e => {\n          setSearch(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: obj => {\n          setSelectedValue(obj);\n          setMonth(obj.value);\n        },\n        value: selectedValue,\n        options: months,\n        placeholder: \"Search by month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"less\",\n        children: transactions.filter(transaction => {\n          if (search === \"\") {\n            return transaction;\n          } else if (transaction.transactionType.toLowerCase().includes(search.toLowerCase())) {\n            return transaction;\n          }\n        }).filter(transaction => {\n          if (month === \"\") {\n            return transaction;\n          } else if (transaction.date.substring(0, 2) === month) {\n            return transaction;\n          }\n        }).slice(0).reverse().map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n          transaction: transaction\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(TransactionList, \"FLC+800xJEMGQvW+yPpK8b3whLU=\");\n\n_c = TransactionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"sources":["/Users/timtaylor/Documents/expense-tracker-app/client/src/components/TransactionList.js"],"names":["React","useContext","useEffect","useState","GlobalContext","Transaction","Select","TransactionList","transactions","getTransactions","search","setSearch","month","setMonth","selectedValue","setSelectedValue","listLength","length","id","localStorage","getItem","months","value","label","e","target","obj","filter","transaction","transactionType","toLowerCase","includes","date","substring","slice","reverse","map"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\nimport Select from \"react-select\";\n\nexport const TransactionList = () => {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n  const [search, setSearch] = useState(\"\");\n  const [month, setMonth] = useState(\"\");\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const listLength = transactions.length;\n\n  useEffect(() => {\n    const id = localStorage.getItem(\"id\");\n    getTransactions(id);\n    // eslint-disable-next-line\n  }, []);\n\n  const months = [\n    {\n      value: \"01\",\n      label: \"January\",\n    },\n    {\n      value: \"02\",\n      label: \"February\",\n    },\n    {\n      value: \"03\",\n      label: \"March\",\n    },\n    {\n      value: \"04\",\n      label: \"April\",\n    },\n    {\n      value: \"05\",\n      label: \"May\",\n    },\n    {\n      value: \"06\",\n      label: \"June\",\n    },\n    {\n      value: \"07\",\n      label: \"July\",\n    },\n    {\n      value: \"08\",\n      label: \"August\",\n    },\n    {\n      value: \"09\",\n      label: \"September\",\n    },\n    {\n      value: \"10\",\n      label: \"October\",\n    },\n    {\n      value: \"11\",\n      label: \"November\",\n    },\n    {\n      value: \"12\",\n      label: \"December\",\n    },\n  ];\n\n  return (\n    <>\n      {listLength >= 6 ? (\n        <div>\n          <h3>Transactions</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Search by transaction\"\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n          <Select\n            onChange={(obj) => {\n              setSelectedValue(obj);\n              setMonth(obj.value);\n            }}\n            value={selectedValue}\n            options={months}\n            placeholder=\"Search by month\"\n          />\n          <ul className=\"more\">\n            {transactions\n              .filter((transaction) => {\n                if (search === \"\") {\n                  return transaction;\n                } else if (\n                  transaction.transactionType\n                    .toLowerCase()\n                    .includes(search.toLowerCase())\n                ) {\n                  return transaction;\n                }\n              })\n              .filter((transaction) => {\n                if (month === \"\") {\n                  return transaction;\n                } else if (transaction.date.substring(0, 2) === month) {\n                  return transaction;\n                }\n              })\n              .slice(0)\n              .reverse()\n              .map((transaction) => (\n                <Transaction key={transaction.id} transaction={transaction} />\n              ))}\n          </ul>\n        </div>\n      ) : (\n        <div>\n          <h3>Transactions</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Search by transaction\"\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n          <Select\n            onChange={(obj) => {\n              setSelectedValue(obj);\n              setMonth(obj.value);\n            }}\n            value={selectedValue}\n            options={months}\n            placeholder=\"Search by month\"\n          />\n          <ul className=\"less\">\n            {transactions\n              .filter((transaction) => {\n                if (search === \"\") {\n                  return transaction;\n                } else if (\n                  transaction.transactionType\n                    .toLowerCase()\n                    .includes(search.toLowerCase())\n                ) {\n                  return transaction;\n                }\n              })\n              .filter((transaction) => {\n                if (month === \"\") {\n                  return transaction;\n                } else if (transaction.date.substring(0, 2) === month) {\n                  return transaction;\n                }\n              })\n              .slice(0)\n              .reverse()\n              .map((transaction) => (\n                <Transaction key={transaction.id} transaction={transaction} />\n              ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}