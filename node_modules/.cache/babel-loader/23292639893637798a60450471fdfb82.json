{"ast":null,"code":"var _jsxFileName = \"/Users/timtaylor/Documents/expense-tracker-app-main/client/src/components/AddTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTransaction = () => {\n  _s();\n\n  const {\n    addTransaction\n  } = useContext(GlobalContext);\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [incomeExpense, setIncomeExpense] = useState(\"\");\n  const incomeButton = document.querySelector(\".income\");\n  const expenseButton = document.querySelector(\".expense\");\n\n  const expense = () => {\n    setIncomeExpense(\"expense\");\n    incomeButton.classList.remove(\"selectedIncome\");\n    expenseButton.classList.add(\"selectedExpense\");\n  };\n\n  const income = () => {\n    setIncomeExpense(\"income\");\n    expenseButton.classList.remove(\"selectedExpense\");\n    incomeButton.classList.add(\"selectedIncome\");\n  };\n\n  const onSubmit = e => {\n    const incorrectAmount = document.querySelector(\".incorrect-amount\");\n    const missingAmount = document.querySelector(\".missing-amount\");\n    const missingType = document.querySelector(\".missing-type\");\n    const missingSource = document.querySelector(\".missing-source\");\n    missingType.classList.add(\"hidden\");\n    missingAmount.classList.add(\"hidden\");\n    missingSource.classList.add(\"hidden\");\n    incorrectAmount.classList.add(\"hidden\");\n    e.preventDefault();\n    const date = new Date();\n\n    function getFormattedDate(date) {\n      let year = date.getFullYear();\n      let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\n      let day = date.getDate().toString().padStart(2, \"0\");\n      return month + \"/\" + day + \"/\" + year;\n    }\n\n    if (amount.match(/[a-zA-Z]/g) != null) {\n      console.log(true);\n    } else {\n      console.log(false);\n    }\n\n    if (text === \"\") {\n      return missingType.classList.remove(\"hidden\");\n    } else if (amount === \"\") {\n      return missingAmount.classList.remove(\"hidden\");\n    } else if (amount.match(/[a-zA-Z]/g) != null) {\n      return incorrectAmount.classList.remove(\"hidden\");\n    } else if (incomeExpense === \"\") {\n      return missingSource.classList.remove(\"hidden\");\n    } else {\n      if (incomeExpense === \"expense\") {\n        const expense = \"-\";\n        const expenseTransaction = expense.concat(amount);\n        const transaction = {\n          id: Math.floor(Math.random() * 1000000000),\n          transactionType: text,\n          transactionAmount: expenseTransaction,\n          date: getFormattedDate(date),\n          source: incomeExpense\n        };\n\n        if (text.length >= 1 && amount.length >= 1) {\n          addTransaction(transaction);\n          missingType.classList.add(\"hidden\");\n          missingAmount.classList.add(\"hidden\");\n          missingSource.classList.add(\"hidden\");\n          incorrectAmount.classList.add(\"hidden\");\n        }\n      } else {\n        const transaction = {\n          id: Math.floor(Math.random() * 1000000000),\n          transactionType: text,\n          transactionAmount: amount,\n          date: getFormattedDate(date),\n          source: incomeExpense\n        };\n\n        if (incomeExpense.length > 1 && text.length >= 1 && amount.length >= 1) {\n          addTransaction(transaction);\n          missingType.classList.add(\"hidden\");\n          missingAmount.classList.add(\"hidden\");\n          missingSource.classList.add(\"hidden\");\n          incorrectAmount.classList.add(\"hidden\");\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-transaction\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"missing-source hidden\",\n      children: \"Must choose expense or income\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"missing-type hidden\",\n      children: \"Must enter a transaction type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"incorrect-amount hidden\",\n      children: \"Amount must only container numbers and or a decimal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"missing-amount hidden\",\n      children: \"Must enter a amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        children: \"Transaction Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => {\n          setText(e.target.value);\n        },\n        type: \"text\",\n        id: \"text\",\n        placeholder: \"Enter text...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        value: amount,\n        htmlFor: \"amount\",\n        children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"expense\",\n        onClick: expense,\n        children: \"Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"income\",\n        onClick: income,\n        children: \"Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"float\",\n        id: \"amount\",\n        placeholder: \"Enter amount...\",\n        onChange: e => {\n          setAmount(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmit,\n      className: \"btn\",\n      children: \"Add transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTransaction, \"ISODvzoH35CKrH34okvjwbb6laU=\");\n\n_c = AddTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["/Users/timtaylor/Documents/expense-tracker-app-main/client/src/components/AddTransaction.js"],"names":["React","useContext","useState","GlobalContext","AddTransaction","addTransaction","text","setText","amount","setAmount","incomeExpense","setIncomeExpense","incomeButton","document","querySelector","expenseButton","expense","classList","remove","add","income","onSubmit","e","incorrectAmount","missingAmount","missingType","missingSource","preventDefault","date","Date","getFormattedDate","year","getFullYear","month","getMonth","toString","padStart","day","getDate","match","console","log","expenseTransaction","concat","transaction","id","Math","floor","random","transactionType","transactionAmount","source","length","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n  const { addTransaction } = useContext(GlobalContext);\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [incomeExpense, setIncomeExpense] = useState(\"\");\n\n  const incomeButton = document.querySelector(\".income\");\n  const expenseButton = document.querySelector(\".expense\");\n\n  const expense = () => {\n    setIncomeExpense(\"expense\");\n    incomeButton.classList.remove(\"selectedIncome\");\n    expenseButton.classList.add(\"selectedExpense\");\n  };\n\n  const income = () => {\n    setIncomeExpense(\"income\");\n    expenseButton.classList.remove(\"selectedExpense\");\n    incomeButton.classList.add(\"selectedIncome\");\n  };\n\n  const onSubmit = (e) => {\n    const incorrectAmount = document.querySelector(\".incorrect-amount\");\n    const missingAmount = document.querySelector(\".missing-amount\");\n    const missingType = document.querySelector(\".missing-type\");\n    const missingSource = document.querySelector(\".missing-source\");\n    missingType.classList.add(\"hidden\");\n    missingAmount.classList.add(\"hidden\");\n    missingSource.classList.add(\"hidden\");\n    incorrectAmount.classList.add(\"hidden\");\n    e.preventDefault();\n\n    const date = new Date();\n\n    function getFormattedDate(date) {\n      let year = date.getFullYear();\n      let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\n      let day = date.getDate().toString().padStart(2, \"0\");\n\n      return month + \"/\" + day + \"/\" + year;\n    }\n\n    if (amount.match(/[a-zA-Z]/g) != null) {\n      console.log(true);\n    } else {\n      console.log(false);\n    }\n\n    if (text === \"\") {\n      return missingType.classList.remove(\"hidden\");\n    } else if (amount === \"\") {\n      return missingAmount.classList.remove(\"hidden\");\n    } else if (amount.match(/[a-zA-Z]/g) != null) {\n      return incorrectAmount.classList.remove(\"hidden\");\n    } else if (incomeExpense === \"\") {\n      return missingSource.classList.remove(\"hidden\");\n    } else {\n      if (incomeExpense === \"expense\") {\n        const expense = \"-\";\n\n        const expenseTransaction = expense.concat(amount);\n\n        const transaction = {\n          id: Math.floor(Math.random() * 1000000000),\n          transactionType: text,\n          transactionAmount: expenseTransaction,\n          date: getFormattedDate(date),\n          source: incomeExpense,\n        };\n\n        if (text.length >= 1 && amount.length >= 1) {\n          addTransaction(transaction);\n          missingType.classList.add(\"hidden\");\n          missingAmount.classList.add(\"hidden\");\n          missingSource.classList.add(\"hidden\");\n          incorrectAmount.classList.add(\"hidden\");\n        }\n      } else {\n        const transaction = {\n          id: Math.floor(Math.random() * 1000000000),\n          transactionType: text,\n          transactionAmount: amount,\n          date: getFormattedDate(date),\n          source: incomeExpense,\n        };\n\n        if (\n          incomeExpense.length > 1 &&\n          text.length >= 1 &&\n          amount.length >= 1\n        ) {\n          addTransaction(transaction);\n          missingType.classList.add(\"hidden\");\n          missingAmount.classList.add(\"hidden\");\n          missingSource.classList.add(\"hidden\");\n          incorrectAmount.classList.add(\"hidden\");\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"add-transaction\">\n      <h3>Add new transaction</h3>\n      <h4 className=\"missing-source hidden\">Must choose expense or income</h4>\n      <h4 className=\"missing-type hidden\">Must enter a transaction type</h4>\n      <h4 className=\"incorrect-amount hidden\">\n        Amount must only container numbers and or a decimal\n      </h4>\n      <h4 className=\"missing-amount hidden\">Must enter a amount</h4>\n      <div className=\"form-control\">\n        <label htmlFor=\"text\">Transaction Type</label>\n        <input\n          value={text}\n          onChange={(e) => {\n            setText(e.target.value);\n          }}\n          type=\"text\"\n          id=\"text\"\n          placeholder=\"Enter text...\"\n        />\n      </div>\n      <div className=\"form-control\">\n        <label value={amount} htmlFor=\"amount\">\n          Amount <br />\n        </label>\n        <button className=\"expense\" onClick={expense}>\n          Expense\n        </button>\n        <button className=\"income\" onClick={income}>\n          Income\n        </button>\n        <input\n          type=\"float\"\n          id=\"amount\"\n          placeholder=\"Enter amount...\"\n          onChange={(e) => {\n            setAmount(e.target.value);\n          }}\n        />\n      </div>\n      <button onClick={onSubmit} className=\"btn\">\n        Add transaction\n      </button>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}