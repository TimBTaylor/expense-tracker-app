{"ast":null,"code":"import { ACTIONS } from \"./GlobalState\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.GET_TRANSACTION:\n      return { ...state,\n        loading: false,\n        transactions: action.payload\n      };\n\n    case ACTIONS.DELETE_TRANSACTION:\n      return { ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      };\n\n    case ACTIONS.ADD_TRANSACTION:\n      return { ...state,\n        transactions: [...state.transactions, action.payload]\n      };\n\n    case ACTIONS.ERROR_TRANSACTION:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/timtaylor/Documents/expense-tracker-app-main/client/src/context/AppReducer.js"],"names":["ACTIONS","reducer","state","action","type","GET_TRANSACTION","loading","transactions","payload","DELETE_TRANSACTION","filter","transaction","id","ADD_TRANSACTION","ERROR_TRANSACTION","error"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,OAAO,CAACK,eAAb;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,YAAY,EAAEJ,MAAM,CAACK;AAHhB,OAAP;;AAKF,SAAKR,OAAO,CAACS,kBAAb;AACE,aAAO,EACL,GAAGP,KADE;AAELK,QAAAA,YAAY,EAAEL,KAAK,CAACK,YAAN,CAAmBG,MAAnB,CACXC,WAAD,IAAiBA,WAAW,CAACC,EAAZ,KAAmBT,MAAM,CAACK,OAD/B;AAFT,OAAP;;AAMF,SAAKR,OAAO,CAACa,eAAb;AACE,aAAO,EACL,GAAGX,KADE;AAELK,QAAAA,YAAY,EAAE,CAAC,GAAGL,KAAK,CAACK,YAAV,EAAwBJ,MAAM,CAACK,OAA/B;AAFT,OAAP;;AAIF,SAAKR,OAAO,CAACc,iBAAb;AACE,aAAO,EACL,GAAGZ,KADE;AAELa,QAAAA,KAAK,EAAEZ,MAAM,CAACK;AAFT,OAAP;;AAIF;AACE,aAAON,KAAP;AAzBJ;AA2BD,CA5BM","sourcesContent":["import { ACTIONS } from \"./GlobalState\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.GET_TRANSACTION:\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload,\n      };\n    case ACTIONS.DELETE_TRANSACTION:\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case ACTIONS.ADD_TRANSACTION:\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload],\n      };\n    case ACTIONS.ERROR_TRANSACTION:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}