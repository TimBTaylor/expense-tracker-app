{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","components/Chart.js","components/ProfileView.js","components/Main.js","App.js","index.js"],"names":["Header","username","localStorage","getItem","reducer","state","action","type","ACTIONS","GET_TRANSACTION","loading","transactions","payload","DELETE_TRANSACTION","filter","transaction","id","ADD_TRANSACTION","ERROR_TRANSACTION","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","a","axios","get","res","data","transactionDetails","userId","delete","headers","transactionAmount","transactionType","date","source","then","console","log","catch","err","transactionItem","post","Provider","value","deleteTransaction","addTransaction","getTransactions","numberWithCommas","x","toString","replace","Balance","total","useContext","map","JSON","parse","reduce","acc","item","toFixed","IncomeExpenses","amounts","expense","amount","updatedExpense","substring","expenseAmount","income","className","Transaction","sign","Math","abs","onClick","TransactionList","useState","search","setSearch","month","setMonth","selectedValue","setSelectedValue","listLength","length","useEffect","months","label","placeholder","onChange","e","target","obj","options","toLowerCase","includes","slice","reverse","AddTransaction","text","setText","setAmount","incomeExpense","setIncomeExpense","incomeButton","document","querySelector","expenseButton","htmlFor","classList","remove","add","incorrectAmount","missingAmount","missingType","missingSource","preventDefault","Date","getFormattedDate","year","getFullYear","getMonth","padStart","getDate","match","expenseTransaction","concat","floor","random","Chart","labels","datasets","backgroundColor","hoverBackgroundColor","title","display","fontSize","legend","position","ProfileView","password","Container","Row","Col","Main","loggedin","setLoggedIn","incorrectRegister","setIncorrectRegister","incorrectLogin","setIncorrectLogin","setUserName","setPassword","usersData","setUsersData","nameTaken","setNameTaken","profile","setProfile","getData","createUser","usernames","user","takenUsernames","name","setItem","_id","logIn","users","usersPasswords","usernameIndex","indexOf","passwordIndex","usernameUsed","registrationFail","logInFail","collapseOnSelect","expand","variant","Brand","href","Toggle","Collapse","Link","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.23bdd743.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  const username = localStorage.getItem(\"username\");\n  return (\n    <div>\n      <h2>{username}'s Expense Tracker</h2>\n    </div>\n  );\n};\n","import { ACTIONS } from \"./GlobalState\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.GET_TRANSACTION:\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload,\n      };\n    case ACTIONS.DELETE_TRANSACTION:\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case ACTIONS.ADD_TRANSACTION:\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload],\n      };\n    case ACTIONS.ERROR_TRANSACTION:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport { reducer } from \"./AppReducer\";\nimport axios from \"axios\";\n\n//Initial State\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true,\n};\n\nexport const ACTIONS = {\n  DELETE_TRANSACTION: \"delete_transaction\",\n  ADD_TRANSACTION: \"add_transaction\",\n  GET_TRANSACTION: \"get_transaction\",\n  ERROR_TRANSACTION: \"error_transaction\",\n};\n\n//Create  context\nexport const GlobalContext = createContext(initialState);\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //Actions\n\n  async function getTransactions(id) {\n    try {\n      const res = await axios.get(\n        `https://expensetrackerbytim.herokuapp.com/expensetracker/${id}`\n      );\n\n      dispatch({\n        type: ACTIONS.GET_TRANSACTION,\n        payload: res.data.transaction,\n      });\n    } catch (err) {\n      dispatch({\n        type: ACTIONS.ERROR_TRANSACTION,\n        payload: err.res,\n      });\n    }\n  }\n\n  async function deleteTransaction(transactionDetails) {\n    const userId = localStorage.getItem(\"id\");\n    const id = transactionDetails.id;\n    try {\n      await axios\n        .delete(\n          `https://expensetrackerbytim.herokuapp.com/expensetracker/deletetransaction/${userId}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            data: {\n              transaction: {\n                id: transactionDetails.id,\n                transactionAmount: `${transactionDetails.transactionAmount}`,\n                transactionType: `${transactionDetails.transactionType}`,\n                date: `${transactionDetails.date}`,\n                source: `${transactionDetails.source}`,\n              },\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.err(err);\n        });\n      dispatch({\n        type: ACTIONS.DELETE_TRANSACTION,\n        payload: id,\n      });\n    } catch (err) {\n      dispatch({\n        type: ACTIONS.ERROR_TRANSACTION,\n        payload: err.res,\n      });\n    }\n  }\n\n  async function addTransaction(transactionItem) {\n    const userId = localStorage.getItem(\"id\");\n    try {\n      await axios\n        .post(\n          `https://expensetrackerbytim.herokuapp.com/expensetracker/addtransaction/${userId}`,\n          {\n            transaction: {\n              id: transactionItem.id,\n              transactionAmount: transactionItem.transactionAmount,\n              transactionType: transactionItem.transactionType,\n              date: transactionItem.date,\n              source: transactionItem.source,\n            },\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n      dispatch({\n        type: ACTIONS.ADD_TRANSACTION,\n        payload: transactionItem,\n      });\n    } catch (err) {\n      dispatch({\n        type: ACTIONS.ERROR_TRANSACTION,\n        payload: err.res,\n      });\n    }\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n        getTransactions,\n        error: state.error,\n        loading: state.loading,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","export function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) =>\n    JSON.parse(transaction.transactionAmount)\n  );\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your balance</h4>\n      <h1>${numberWithCommas(total)}</h1>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) =>\n    JSON.parse(transaction.transactionAmount)\n  );\n  const expense = amounts\n    .filter((amount) => amount < 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const updatedExpense = expense.substring(1);\n\n  const expenseAmount = expense < 0 ? updatedExpense : expense;\n\n  const income = amounts\n    .filter((amount) => amount > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  return (\n    <div>\n      <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">+${numberWithCommas(income)}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">-${numberWithCommas(expenseAmount)}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n  const sign = transaction.transactionAmount < 0 ? \"-\" : \"+\";\n  const transactionDetails = {\n    id: transaction.id,\n    transactionAmount: `${transaction.transactionAmount}`,\n    transactionType: `${transaction.transactionType}`,\n    date: `${transaction.date}`,\n    source: `${transaction.source}`,\n  };\n\n  const amount = numberWithCommas(Math.abs(transaction.transactionAmount));\n  return (\n    <li\n      key={transaction.id}\n      className={transaction.transactionAmount < 0 ? \"minus\" : \"plus\"}\n    >\n      <span>\n        {sign}${amount}\n      </span>\n      <span>{transaction.transactionType}</span>\n      <span>{transaction.date}</span>\n      <button\n        onClick={() => deleteTransaction(transactionDetails)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\nimport Select from \"react-select\";\n\nexport const TransactionList = () => {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n  const [search, setSearch] = useState(\"\");\n  const [month, setMonth] = useState(\"\");\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const listLength = transactions.length;\n\n  useEffect(() => {\n    const id = localStorage.getItem(\"id\");\n    getTransactions(id);\n    // eslint-disable-next-line\n  }, []);\n\n  const months = [\n    {\n      value: \"01\",\n      label: \"January\",\n    },\n    {\n      value: \"02\",\n      label: \"February\",\n    },\n    {\n      value: \"03\",\n      label: \"March\",\n    },\n    {\n      value: \"04\",\n      label: \"April\",\n    },\n    {\n      value: \"05\",\n      label: \"May\",\n    },\n    {\n      value: \"06\",\n      label: \"June\",\n    },\n    {\n      value: \"07\",\n      label: \"July\",\n    },\n    {\n      value: \"08\",\n      label: \"August\",\n    },\n    {\n      value: \"09\",\n      label: \"September\",\n    },\n    {\n      value: \"10\",\n      label: \"October\",\n    },\n    {\n      value: \"11\",\n      label: \"November\",\n    },\n    {\n      value: \"12\",\n      label: \"December\",\n    },\n  ];\n\n  return (\n    <>\n      {listLength >= 6 ? (\n        <div>\n          <h3>Transactions</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Search by transaction\"\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n          <Select\n            onChange={(obj) => {\n              setSelectedValue(obj);\n              setMonth(obj.value);\n            }}\n            value={selectedValue}\n            options={months}\n            placeholder=\"Search by month\"\n          />\n          <ul className=\"more\">\n            {transactions\n              .filter((transaction) => {\n                if (search === \"\") {\n                  return transaction;\n                } else if (\n                  transaction.transactionType\n                    .toLowerCase()\n                    .includes(search.toLowerCase())\n                ) {\n                  return transaction;\n                }\n              })\n              .filter((transaction) => {\n                if (month === \"\") {\n                  return transaction;\n                } else if (transaction.date.substring(0, 2) === month) {\n                  return transaction;\n                }\n              })\n              .slice(0)\n              .reverse()\n              .map((transaction) => (\n                <Transaction key={transaction.id} transaction={transaction} />\n              ))}\n          </ul>\n        </div>\n      ) : (\n        <div>\n          <h3>Transactions</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Search by transaction\"\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n          <Select\n            onChange={(obj) => {\n              setSelectedValue(obj);\n              setMonth(obj.value);\n            }}\n            value={selectedValue}\n            options={months}\n            placeholder=\"Search by month\"\n          />\n          <ul className=\"less\">\n            {transactions\n              .filter((transaction) => {\n                if (search === \"\") {\n                  return transaction;\n                } else if (\n                  transaction.transactionType\n                    .toLowerCase()\n                    .includes(search.toLowerCase())\n                ) {\n                  return transaction;\n                }\n              })\n              .filter((transaction) => {\n                if (month === \"\") {\n                  return transaction;\n                } else if (transaction.date.substring(0, 2) === month) {\n                  return transaction;\n                }\n              })\n              .slice(0)\n              .reverse()\n              .map((transaction) => (\n                <Transaction key={transaction.id} transaction={transaction} />\n              ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n  const { addTransaction } = useContext(GlobalContext);\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [incomeExpense, setIncomeExpense] = useState(\"\");\n\n  const incomeButton = document.querySelector(\".income\");\n  const expenseButton = document.querySelector(\".expense\");\n\n  const expense = () => {\n    setIncomeExpense(\"expense\");\n    incomeButton.classList.remove(\"selectedIncome\");\n    expenseButton.classList.add(\"selectedExpense\");\n  };\n\n  const income = () => {\n    setIncomeExpense(\"income\");\n    expenseButton.classList.remove(\"selectedExpense\");\n    incomeButton.classList.add(\"selectedIncome\");\n  };\n\n  const onSubmit = (e) => {\n    const incorrectAmount = document.querySelector(\".incorrect-amount\");\n    const missingAmount = document.querySelector(\".missing-amount\");\n    const missingType = document.querySelector(\".missing-type\");\n    const missingSource = document.querySelector(\".missing-source\");\n    missingType.classList.add(\"hidden\");\n    missingAmount.classList.add(\"hidden\");\n    missingSource.classList.add(\"hidden\");\n    incorrectAmount.classList.add(\"hidden\");\n    e.preventDefault();\n\n    const date = new Date();\n\n    function getFormattedDate(date) {\n      let year = date.getFullYear();\n      let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\n      let day = date.getDate().toString().padStart(2, \"0\");\n\n      return month + \"/\" + day + \"/\" + year;\n    }\n\n    if (text === \"\") {\n      return missingType.classList.remove(\"hidden\");\n    } else if (amount === \"\") {\n      return missingAmount.classList.remove(\"hidden\");\n    } else if (amount.match(/[a-zA-Z]/g) != null) {\n      return incorrectAmount.classList.remove(\"hidden\");\n    } else if (incomeExpense === \"\") {\n      return missingSource.classList.remove(\"hidden\");\n    } else {\n      if (incomeExpense === \"expense\") {\n        const expense = \"-\";\n\n        const expenseTransaction = expense.concat(amount);\n\n        const transaction = {\n          id: Math.floor(Math.random() * 1000000000),\n          transactionType: text,\n          transactionAmount: expenseTransaction,\n          date: getFormattedDate(date),\n          source: incomeExpense,\n        };\n\n        if (text.length >= 1 && amount.length >= 1) {\n          addTransaction(transaction);\n          missingType.classList.add(\"hidden\");\n          missingAmount.classList.add(\"hidden\");\n          missingSource.classList.add(\"hidden\");\n          incorrectAmount.classList.add(\"hidden\");\n        }\n      } else {\n        const transaction = {\n          id: Math.floor(Math.random() * 1000000000),\n          transactionType: text,\n          transactionAmount: amount,\n          date: getFormattedDate(date),\n          source: incomeExpense,\n        };\n\n        if (\n          incomeExpense.length > 1 &&\n          text.length >= 1 &&\n          amount.length >= 1\n        ) {\n          addTransaction(transaction);\n          missingType.classList.add(\"hidden\");\n          missingAmount.classList.add(\"hidden\");\n          missingSource.classList.add(\"hidden\");\n          incorrectAmount.classList.add(\"hidden\");\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"add-transaction\">\n      <h3>Add new transaction</h3>\n      <h4 className=\"missing-source hidden\">Must choose expense or income</h4>\n      <h4 className=\"missing-type hidden\">Must enter a transaction type</h4>\n      <h4 className=\"incorrect-amount hidden\">\n        Amount must only container numbers and or a decimal\n      </h4>\n      <h4 className=\"missing-amount hidden\">Must enter an amount</h4>\n      <div className=\"form-control\">\n        <label htmlFor=\"text\">Transaction Type</label>\n        <input\n          value={text}\n          onChange={(e) => {\n            setText(e.target.value);\n          }}\n          type=\"text\"\n          id=\"text\"\n          placeholder=\"Enter text...\"\n        />\n      </div>\n      <div className=\"form-control\">\n        <label value={amount} htmlFor=\"amount\">\n          Amount <br />\n        </label>\n        <button className=\"expense\" onClick={expense}>\n          Expense\n        </button>\n        <button className=\"income\" onClick={income}>\n          Income\n        </button>\n        <input\n          type=\"float\"\n          id=\"amount\"\n          placeholder=\"Enter amount...\"\n          onChange={(e) => {\n            setAmount(e.target.value);\n          }}\n        />\n      </div>\n      <button onClick={onSubmit} className=\"btn\">\n        Add transaction\n      </button>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Chart = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const transactionList = transactions.map((transaction) => {\n    return transaction.transactionType;\n  });\n\n  const transactionAmount = transactions.map((transaction) => {\n    return JSON.parse(Math.abs(transaction.transactionAmount));\n  });\n  const state = {\n    labels: transactionList,\n    datasets: [\n      {\n        label: \"Rainfall\",\n        backgroundColor: [\n          \"#B21F00\",\n          \"#C9DE00\",\n          \"#2FDE00\",\n          \"#00A6B4\",\n          \"#6800B4\",\n        ],\n        hoverBackgroundColor: [\n          \"#501800\",\n          \"#4B5000\",\n          \"#175000\",\n          \"#003350\",\n          \"#35014F\",\n        ],\n        data: transactionAmount,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Pie\n        data={state}\n        options={{\n          title: {\n            display: true,\n            text: \"Transactions\",\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: \"right\",\n          },\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Chart } from \"./Chart\";\nimport { TransactionList } from \"./TransactionList\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const ProfileView = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const username = localStorage.getItem(\"username\");\n\n  const password = localStorage.getItem(\"password\");\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <div className=\"profile-header\">\n            <h1 className=\"account-info\">Account Information</h1>\n            <div className=\"info\">\n              <h3 className=\"username-header\">Username</h3>\n              <br />\n              <h4 className=\"username\">{username}</h4>\n              <br />\n              <br />\n              <h3 className=\"password-header\">Password</h3>\n              <br />\n              <h4 className=\"password\">{password}</h4>\n            </div>\n          </div>\n        </Col>\n        <Col>{transactions.length > 0 ? <Chart /> : <div></div>}</Col>\n      </Row>\n\n      <TransactionList />\n    </Container>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Header } from \"./Header\";\nimport { Balance } from \"./Balance\";\nimport { IncomeExpenses } from \"./IncomeExpenses\";\nimport { TransactionList } from \"./TransactionList\";\nimport { AddTransaction } from \"./AddTransaction\";\nimport { GlobalProvider } from \"../context/GlobalState\";\nimport { ProfileView } from \"./ProfileView\";\nimport axios from \"axios\";\nimport * as ReactBootStrap from \"react-bootstrap\";\n\nexport const Main = () => {\n  const [loggedin, setLoggedIn] = useState(false);\n  const [incorrectRegister, setIncorrectRegister] = useState(false);\n  const [incorrectLogin, setIncorrectLogin] = useState(false);\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usersData, setUsersData] = useState([]);\n  const [nameTaken, setNameTaken] = useState(false);\n  const [profile, setProfile] = useState(false);\n\n  useEffect(() => {\n    async function getData() {\n      await axios\n        .get(\n          \"https://expensetrackerbytim.herokuapp.com/expensetracker/allusers\"\n        )\n        .then((res) => {\n          setUsersData(res.data);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n\n    getData();\n  }, []);\n\n  const createUser = async (e) => {\n    e.preventDefault();\n    if (username.length > 1 && password.length > 1) {\n      const usernames = usersData.map((user) => {\n        return user.username;\n      });\n      const isTaken = usernames.filter((takenUsernames) => {\n        return takenUsernames === username;\n      });\n\n      if (isTaken.length > 0) {\n        setNameTaken(true);\n      } else {\n        await axios\n          .post(\n            \"https://expensetrackerbytim.herokuapp.com/expensetracker/user\",\n            {\n              name: `${username}`,\n              password: `${password}`,\n            }\n          )\n          .then((res) => {\n            console.log(res);\n            setLoggedIn(true);\n            localStorage.setItem(\"username\", res.data.username);\n            localStorage.setItem(\"id\", res.data._id);\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n    } else {\n      setIncorrectLogin(false);\n      setIncorrectRegister(true);\n    }\n  };\n\n  const logIn = async (e) => {\n    e.preventDefault();\n\n    if (username.length > 1 && password.length > 1) {\n      //returns array of all usernames\n      const users = usersData.map((user) => {\n        return user.username;\n      });\n      //returns array of all passwords\n      const usersPasswords = usersData.map((user) => {\n        return user.password;\n      });\n      const usernameIndex = users.indexOf(username);\n      const passwordIndex = usersPasswords.indexOf(password);\n      if (\n        usernameIndex !== passwordIndex ||\n        usernameIndex < 0 ||\n        passwordIndex < 0\n      ) {\n        setIncorrectRegister(false);\n        setIncorrectLogin(true);\n        return console.log(\"log in failed\");\n      }\n      if (usernameIndex === passwordIndex) {\n        setLoggedIn(true);\n        console.log(\"log in successful\");\n      }\n      localStorage.setItem(\"username\", usersData[usernameIndex].username);\n      localStorage.setItem(\"password\", usersData[passwordIndex].password);\n      localStorage.setItem(\"id\", usersData[usernameIndex]._id);\n    } else {\n      setIncorrectRegister(false);\n      setIncorrectLogin(true);\n    }\n  };\n\n  const usernameUsed = nameTaken ? (\n    <h1 className=\"username-taken\">Username is already taken</h1>\n  ) : (\n    <div></div>\n  );\n\n  const registrationFail = incorrectRegister ? (\n    <h1 className=\"too-short\">\n      Username and password must be 1 character or more\n    </h1>\n  ) : (\n    <div></div>\n  );\n\n  const logInFail = incorrectLogin ? (\n    <h1 className=\"incorrect-info\">\n      Incorrect username and password combination\n    </h1>\n  ) : (\n    <div></div>\n  );\n\n  const goToProfile = () => {\n    setProfile(true);\n  };\n\n  const goToHome = () => {\n    setProfile(false);\n  };\n\n  return (\n    <>\n      {loggedin ? (\n        <GlobalProvider>\n          <ReactBootStrap.Navbar\n            collapseOnSelect\n            expand=\"md\"\n            variant=\"light\"\n            className=\"navbar\"\n          >\n            <ReactBootStrap.Container>\n              <ReactBootStrap.Navbar.Brand\n                className=\"navbar-expense\"\n                href=\"#home\"\n              >\n                Expense Tracker\n              </ReactBootStrap.Navbar.Brand>\n              <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n              <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n                <ReactBootStrap.Nav className=\"me-auto\">\n                  <ReactBootStrap.Nav.Link\n                    className=\"nav-link\"\n                    onClick={goToHome}\n                    href=\"#\"\n                  >\n                    Home\n                  </ReactBootStrap.Nav.Link>\n                  <ReactBootStrap.Nav.Link\n                    className=\"nav-link\"\n                    onClick={goToProfile}\n                    href=\"#\"\n                  >\n                    Profile\n                  </ReactBootStrap.Nav.Link>\n                  <ReactBootStrap.Nav.Link\n                    target=\"_blank\"\n                    className=\"nav-link\"\n                    href=\"https://github.com/TimBTaylor/expense-tracker-app\"\n                  >\n                    See Code\n                  </ReactBootStrap.Nav.Link>\n                  <ReactBootStrap.Nav.Link\n                    target=\"_blank\"\n                    className=\"nav-link\"\n                    href=\"https://timbtaylor.github.io/personal-portfolio/projects.html\"\n                  >\n                    Portfolio\n                  </ReactBootStrap.Nav.Link>\n                </ReactBootStrap.Nav>\n              </ReactBootStrap.Navbar.Collapse>\n            </ReactBootStrap.Container>\n          </ReactBootStrap.Navbar>\n          {profile ? (\n            <ProfileView />\n          ) : (\n            <div className=\"container\">\n              <Header />\n              <Balance />\n              <IncomeExpenses />\n              <AddTransaction />\n              <TransactionList />\n            </div>\n          )}\n        </GlobalProvider>\n      ) : (\n        <div className=\"login\">\n          <div className=\"welcome\">\n            <h1>Welcome to Expense Tracker by Tim</h1>\n          </div>\n          <h2 className=\"portfolio-code\">\n            You can visit my portfolio{\" \"}\n            <span>\n              <a href=\"https://timbtaylor.github.io/personal-portfolio/\">\n                here\n              </a>\n            </span>\n            <br />\n            as well as the code for this project{\" \"}\n            <span>\n              <a href=\"https://github.com/TimBTaylor/expense-tracker-app\">\n                here\n              </a>\n            </span>\n          </h2>\n          <div className=\"login-warnings\">\n            {usernameUsed}\n            {registrationFail}\n            {logInFail}\n          </div>\n          <div className=\"login-inputs\">\n            <input\n              className=\"username\"\n              onChange={(e) => setUserName(e.target.value)}\n              placeholder=\"Username\"\n            />\n            <br />\n            <input\n              type=\"password\"\n              className=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Password\"\n            />\n            <br />\n            <button onClick={createUser}>Register</button>\n            <br />\n            <button onClick={logIn}>Log in</button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Main } from \"./components/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}